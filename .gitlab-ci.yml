image: docker:20.10.16

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"

stages:
  - build
  - deploy
  - release

services:
  - name: docker:20.10.16-dind  
    command: ["--mtu=1300"]

before_script:
  - docker info
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build:
  stage: build

  # Default branch tags with latest and prod (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      tag_commit=:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
      tag="${tag_commit}-$(date +%s)"
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then 
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
        echo "tags: 'latest', '${tag}"
        docker build --pull -t "$CI_REGISTRY_IMAGE" .
        docker tag "$CI_REGISTRY_IMAGE" "$CI_REGISTRY_IMAGE${tag}"
        docker tag "$CI_REGISTRY_IMAGE" "$CI_REGISTRY_IMAGE${tag_commit}"
        docker push --all-tags "$CI_REGISTRY_IMAGE"
      else
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
        docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
        docker push "$CI_REGISTRY_IMAGE${tag}"
      fi

  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == 'develop'
  image:
    name: fluxcd/flux-cli:v0.22.1
    entrypoint:
      - ""
  before_script:
    - mkdir ~/.kube/
    - echo $KUBE_CONFIG_STAGING| base64 -d > config
    - mv config ~/.kube/
  script:
    - 'flux reconcile kustomization ocloud-cost --with-source'

release:
  stage: release
  rules:
    - if: $CI_COMMIT_TAG =~ /^v(\d+\.)?(\d+\.)?(\*|\d+)$/
  variables:
    BUILD_VERSION: $CI_DEFAULT_BRANCH-$CI_COMMIT_SHORT_SHA

  script:
    - echo "Retagging image $CI_REGISTRY_IMAGE:$BUILD_VERSION as $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker pull "$CI_REGISTRY_IMAGE:$BUILD_VERSION"
    - docker tag "$CI_REGISTRY_IMAGE:$BUILD_VERSION" "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"